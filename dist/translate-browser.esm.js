var a={};function t(a){try{return JSON.parse(a)}catch(t){return function(a){const t=[];let e=a;const o=[...e.matchAll(/"/g)];for(let a=0;a<o.length;a++){const l=o[a].index+1;if(a%2==0){const a=e.indexOf('"',l);t.push([l,e.slice(l,a)])}}for(;e.includes(",,");)e=e.replace(/,,/g,",null,");for(;e.includes("[,");)e=e.replace(/\[,/g,"[null,");const l=[...e.matchAll(/"/g)];for(let a=0;a<l.length;a++){const o=l[a].index+1;if(a%2==0){const l=a/2,n=e.indexOf('"',o);e=e.slice(0,o)+t[l][1]+e.slice(n)}}return JSON.parse(e)}(a)}}function e(a,t){return a>>>t}a.d=(t,e)=>{for(var o in e)a.o(e,o)&&!a.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},a.o=(a,t)=>Object.prototype.hasOwnProperty.call(a,t);class o{constructor(a="0",t="translate.google.com"){this.tkk=a,this.host=t.includes("http")?t:"https://"+t,this.RE_TKK=/tkk:\'(.+?)\'/g,this.RE_RAWTKK=/tkk:\'(.+?)\'/g}async update(){const a=Math.floor(Date.now()/36e5);if(this.tkk&&parseInt(this.tkk.split(".")[0])===a)return;const t=await fetch(this.host),e=await t.text(),o=e.match(this.RE_TKK);if(o)return void(this.tkk=o[1]);const l=e.match(this.RE_TKK);let n=null;if(l&&(n=l[1],n=n.replace(/\\x([0-9A-Fa-f]{2})/g,(a,t)=>String.fromCharCode(parseInt(t,16)))),n)try{const a=`\n                ${n};\n                return { a: a, b: b, n: typeof n !== "undefined" ? n : 0 };\n            `;console.log("funcBody:",a);const t=new Function(a),{a:e,b:o,n:l}=t(),s=e+o;this.tkk=`${l}.${s}`}catch(a){const t=n.match(/a\s*=\s*(-?\d+)/),e=n.match(/b\s*=\s*(-?\d+)/),o=n.match(/n\s*=\s*(-?\d+)/);if(t&&e&&o){const a=parseInt(t[1]),l=parseInt(e[1]),n=parseInt(o[1]),s=a+l;this.tkk=`${n}.${s}`}}}xr(a,t){const o=t.length;let l=0;for(;l<o-2;){let o=t[l+2];o=o>="a"?o.charCodeAt(0)-87:parseInt(o),o="+"===t[l+1]?e(a,o):a<<o,a="+"===t[l]?a+o&4294967295:a^o,l+=3}return a}acquire(a){const t=[];for(let e=0;e<a.length;e++){const o=a.charCodeAt(e);o<65536?t.push(o):t.push(Math.floor((o-65536)/1024+55296),Math.floor((o-65536)%1024+56320))}const e=("0"!==this.tkk?this.tkk:"").split("."),o=e.length>1?parseInt(e[0]):0,l=[];let n=0;const s=t.length;for(;n<s;){let a=t[n];a<128?l.push(a):(a<2048?l.push(a>>6|192):(55296==(64512&a)&&n+1<s&&56320==(64512&t[n+1])?(n+=1,a=65536+((1023&a)<<10)+(1023&t[n]),l.push(a>>18|240),l.push(a>>12&63|128)):l.push(a>>12|224),l.push(a>>6&63|128)),l.push(63&a|128)),n+=1}let r=o;for(const a of l)r+=a,r=this.xr(r,"+-a^+6");return r=this.xr(r,"+-3^+b+-f"),r^=e.length>1?parseInt(e[1]):0,r<0&&(r=2147483648+(2147483647&r)),r%=1e6,`${r}.${r^o}`}async do(a){await this.update();return this.acquire(a)}}const l="Mozilla/5.0 (Windows NT 10.0; Win64; x64)",n=["translate.googleapis.com"],s=["translate.google.ac","translate.google.ad","translate.google.ae","translate.google.al","translate.google.am","translate.google.as","translate.google.at","translate.google.az","translate.google.ba","translate.google.be","translate.google.bf","translate.google.bg","translate.google.bi","translate.google.bj","translate.google.bs","translate.google.bt","translate.google.by","translate.google.ca","translate.google.cat","translate.google.cc","translate.google.cd","translate.google.cf","translate.google.cg","translate.google.ch","translate.google.ci","translate.google.cl","translate.google.cm","translate.google.cn","translate.google.co.ao","translate.google.co.bw","translate.google.co.ck","translate.google.co.cr","translate.google.co.id","translate.google.co.il","translate.google.co.in","translate.google.co.jp","translate.google.co.ke","translate.google.co.kr","translate.google.co.ls","translate.google.co.ma","translate.google.co.mz","translate.google.co.nz","translate.google.co.th","translate.google.co.tz","translate.google.co.ug","translate.google.co.uk","translate.google.co.uz","translate.google.co.ve","translate.google.co.vi","translate.google.co.za","translate.google.co.zm","translate.google.co.zw","translate.google.com.af","translate.google.com.ag","translate.google.com.ai","translate.google.com.ar","translate.google.com.au","translate.google.com.bd","translate.google.com.bh","translate.google.com.bn","translate.google.com.bo","translate.google.com.br","translate.google.com.bz","translate.google.com.co","translate.google.com.cu","translate.google.com.cy","translate.google.com.do","translate.google.com.ec","translate.google.com.eg","translate.google.com.et","translate.google.com.fj","translate.google.com.gh","translate.google.com.gi","translate.google.com.gt","translate.google.com.hk","translate.google.com.jm","translate.google.com.kh","translate.google.com.kw","translate.google.com.lb","translate.google.com.ly","translate.google.com.mm","translate.google.com.mt","translate.google.com.mx","translate.google.com.my","translate.google.com.na","translate.google.com.ng","translate.google.com.ni","translate.google.com.np","translate.google.com.om","translate.google.com.pa","translate.google.com.pe","translate.google.com.pg","translate.google.com.ph","translate.google.com.pk","translate.google.com.pr","translate.google.com.py","translate.google.com.qa","translate.google.com.sa","translate.google.com.sb","translate.google.com.sg","translate.google.com.sl","translate.google.com.sv","translate.google.com.tj","translate.google.com.tr","translate.google.com.tw","translate.google.com.ua","translate.google.com.uy","translate.google.com.vc","translate.google.com.vn","translate.google.com","translate.google.cv","translate.google.cz","translate.google.de","translate.google.dj","translate.google.dk","translate.google.dm","translate.google.dz","translate.google.ee","translate.google.es","translate.google.eu","translate.google.fi","translate.google.fm","translate.google.fr","translate.google.ga","translate.google.ge","translate.google.gf","translate.google.gg","translate.google.gl","translate.google.gm","translate.google.gp","translate.google.gr","translate.google.gy","translate.google.hn","translate.google.hr","translate.google.ht","translate.google.hu","translate.google.ie","translate.google.im","translate.google.io","translate.google.iq","translate.google.is","translate.google.it","translate.google.je","translate.google.jo","translate.google.kg","translate.google.ki","translate.google.kz","translate.google.la","translate.google.li","translate.google.lk","translate.google.lt","translate.google.lu","translate.google.lv","translate.google.md","translate.google.me","translate.google.mg","translate.google.mk","translate.google.ml","translate.google.mn","translate.google.ms","translate.google.mu","translate.google.mv","translate.google.mw","translate.google.ne","translate.google.nf","translate.google.nl","translate.google.no","translate.google.nr","translate.google.nu","translate.google.pl","translate.google.pn","translate.google.ps","translate.google.pt","translate.google.ro","translate.google.rs","translate.google.ru","translate.google.rw","translate.google.sc","translate.google.se","translate.google.sh","translate.google.si","translate.google.sk","translate.google.sm","translate.google.sn","translate.google.so","translate.google.sr","translate.google.st","translate.google.td","translate.google.tg","translate.google.tk","translate.google.tl","translate.google.tm","translate.google.tn","translate.google.to","translate.google.tt","translate.google.us","translate.google.vg","translate.google.vu","translate.google.ws"],r={ee:"et"},g={abk:"abkhaz",ace:"acehnese",ach:"acholi",aar:"afar",af:"afrikaans",sq:"albanian",alz:"alur",am:"amharic",ar:"arabic",hy:"armenian",as:"assamese",ava:"avar",awa:"awadhi",ay:"aymara",az:"azerbaijani",ban:"balinese",bal:"baluchi",bm:"bambara",bci:"baoulÃ©",bak:"bashkir",eu:"basque",btx:"batak karo",bts:"batak simalungun",bbc:"batak toba",be:"belarusian",bem:"bemba",bn:"bengali",bew:"betawi",bho:"bhojpuri",bik:"bikol",bs:"bosnian",bre:"breton",bg:"bulgarian",bua:"buryat",yue:"cantonese",ca:"catalan",ceb:"cebuano",cha:"chamorro",che:"chechen",zh:"chinese","zh-cn":"chinese (simplified)","zh-tw":"chinese (traditional)",chk:"chuukese",chv:"chuvash",co:"corsican",crh:"crimean tatar",hr:"croatian",cs:"czech",da:"danish","fa-af":"dari",dv:"dhivehi",din:"dinka",doi:"dogri",dom:"dombe",nl:"dutch",dyu:"dyula",dzo:"dzongkha",en:"english",eo:"esperanto",et:"estonian",fao:"faroese",fij:"fijian",fil:"filipino (tagalog)",fi:"finnish",fon:"fon",fr:"french",fy:"frisian",fur:"friulian",ful:"fulani",gaa:"ga",gl:"galician",ka:"georgian",de:"german",el:"greek",gn:"guarani",gu:"gujarati",ht:"haitian creole",cnh:"hakha chin",ha:"hausa",haw:"hawaiian",he:"hebrew",iw:"hebrew",hil:"hiligaynon",hi:"hindi",hmn:"hmong",hu:"hungarian",hrx:"hunsrik",iba:"iban",is:"icelandic",ig:"igbo",ilo:"ilocano",id:"indonesian",ga:"irish",it:"italian",jam:"jamaican patois",ja:"japanese",jv:"javanese",jw:"javanese",kac:"jingpo",kal:"kalaallisut",kn:"kannada",kau:"kanuri",pam:"kapampangan",kk:"kazakh",kha:"khasi",km:"khmer",cgg:"kiga",kik:"kikongo",rw:"kinyarwanda",ktu:"kituba",trp:"kokborok",kom:"komi",gom:"konkani",ko:"korean",kri:"krio",ku:"kurdish",ckb:"kurdish (sorani)",ky:"kyrgyz",lo:"lao",ltg:"latgalian",la:"latin",lv:"latvian",lij:"ligurian",lim:"limburgish",ln:"lingala",lt:"lithuanian",lmo:"lombard",lg:"luganda",luo:"luo",lb:"luxembourgish",mk:"macedonian",mad:"madurese",mai:"maithili",mak:"makassar",mg:"malagasy",ms:"malay","ms-arab":"malay (jawi)",ml:"malayalam",mt:"maltese",mam:"mam",glv:"manx",mi:"maori",mr:"marathi",mah:"marshallese",mwr:"marwadi",mfe:"mauritian creole",mhr:"meadow mari","mni-mtei":"meiteilon (manipuri)",min:"minang",lus:"mizo",mn:"mongolian",my:"myanmar (burmese)",nhe:"nahuatl (eastern huasteca)","ndc-zw":"ndau",nde:"ndebele (south)",new:"nepalbhasa (newari)",ne:"nepali",no:"norwegian",nus:"nuer",ny:"nyanja (chichewa)",oci:"occitan",or:"odia (oriya)",om:"oromo",oss:"ossetian",pag:"pangasinan",pap:"papiamento",ps:"pashto",fa:"persian",pl:"polish",por:"portuguese (portugal)",pt:"portuguese (portugal, brazil)",pa:"punjabi","pa-arab":"punjabi (shahmukhi)",kek:"q'eqchi'",qu:"quechua",rom:"romani",ro:"romanian",run:"rundi",ru:"russian",sme:"sami (north)",sm:"samoan",sag:"sango",sa:"sanskrit",sat:"santali",gd:"scots gaelic",nso:"sepedi",sr:"serbian",st:"sesotho",crs:"seychellois creole",shn:"shan",sn:"shona",scn:"sicilian",szl:"silesian",sd:"sindhi",si:"sinhala (sinhalese)",sk:"slovak",sl:"slovenian",so:"somali",es:"spanish",su:"sundanese",sus:"susu",sw:"swahili",ssw:"swati",sv:"swedish",tl:"tagalog (filipino)",tah:"tahitian",tg:"tajik","ber-latn":"tamazight",ber:"tamazight (tifinagh)",ta:"tamil",tt:"tatar",te:"telugu",tet:"tetum",th:"thai",bod:"tibetan",ti:"tigrinya",tiv:"tiv",tpi:"tok pisin",ton:"tongan",ts:"tsonga",tsn:"tswana",tcy:"tulu",tum:"tumbuka",tr:"turkish",tk:"turkmen",tuk:"tuvan",ak:"twi (akan)",udm:"udmurt",uk:"ukrainian",ur:"urdu",ug:"uyghur",uz:"uzbek",ven:"venda",vec:"venetian",vi:"vietnamese",war:"waray",cy:"welsh",wol:"wolof",xh:"xhosa",sah:"yakut",yi:"yiddish",yo:"yoruba",yua:"yucatec maya",zap:"zapotec",zu:"zulu"},i=Object.fromEntries(Object.entries(g).map(([a,t])=>[t,a])),c=!1,h=[[["",null,null,0]],null,"en",null,null,null,1,null,[["en"],null,[1],["en"]]];class m{constructor(a=null){this.response=a}}class u extends m{constructor(a,t,e,o,l,n=null,...s){super(...s),this.src=a,this.dest=t,this.origin=e,this.text=o,this.pronunciation=l,this.extraData=n}toString(){this.extraData&&JSON.stringify(this.extraData).slice(0,10);return`Translated(src=${this.src}, dest=${this.dest}, text=${this.text},pronunciation=${this.pronunciation}, extraData="${this.extraData}")`}}class p extends m{constructor(a,t,...e){super(...e),this.lang=a,this.confidence=t}toString(){return`Detected(lang=${this.lang}, confidence=${this.confidence})`}}const k=["en","ca","fr"];class d{constructor({serviceUrls:a=n,userAgent:t=l,raiseException:e=false,listOperationmaxConcurrency:s=2}={}){if(this.userAgent=t,this.serviceUrls=["translate.google.com"],this.clientType="webapp",this.raiseException=e,this.listOperationmaxConcurrency=s,this.tokenAcquirer=new o("0",this.serviceUrls[0]),a){this.serviceUrls=a,this.clientType="webapp",this.tokenAcquirer=new o("0",this.serviceUrls[0]);for(const t of a)if(t.includes("googleapis")){this.serviceUrls=["translate.googleapis.com"],this.clientType="gtx";break}}}pickServiceUrl(){if(1===this.serviceUrls.length)return this.serviceUrls[0];const a=Math.floor(Math.random()*this.serviceUrls.length);return this.serviceUrls[a]}async translateRaw(a,e,o,l){let n="xxxx";"webapp"===this.clientType&&(n=await this.tokenAcquirer.do(a));const s=function(a,t,e,o,l,n=null){const s={client:a,sl:e,tl:o,h:o,dt:["at","bd","ex","ls","md","qca","rw","rm","ss","t"],ie:"UTF-8",oe:"UTF-8",otf:1,ssel:0,tsel:0,tl:l,q:t};if(n)for(const[a,t]of Object.entries(n))s[a]=t;return s}(this.clientType,a,o,e,n,l),r=`https://${this.pickServiceUrl()}/translate_a/single`;const g=new URLSearchParams;for(const[a,t]of Object.entries(s))Array.isArray(t)?t.forEach(t=>g.append(a,t)):g.append(a,t);const i=await fetch(`${r}?${g.toString()}`,{method:"GET",headers:{"User-Agent":this.userAgent}});if(200===i.status){let a=t(await i.text());return Array.isArray(a)||(a=[a]),[a,i]}if(this.raiseException)throw new Error(`Unexpected status code "${i.status}" from ${this.serviceUrls}`);const c=[...h];return c[0][0][0]=a,[c,i]}parseExtraData(a){const t={0:"translation",1:"all-translations",2:"original-language",5:"possible-translations",6:"confidence",7:"possible-mistakes",8:"language",11:"synonyms",12:"definitions",13:"examples",14:"see-also"},e={};for(const[o,l]of Object.entries(t)){const t=parseInt(o);e[l]=t<a.length&&a[t]?a[t]:null}return e}async translate(a,t="en",e="auto",o={}){if(t=t.toLowerCase().split("_")[0],"auto"!==(e=e.toLowerCase().split("_")[0])&&!g[e])if(r[e])e=r[e];else{if(!i[e])throw new Error("Invalid source language:",e);e=i[e]}if(!g[t])if(r[t])t=r[t];else{if(!i[t])throw new Error("invalid destination language");t=i[t]}if(Array.isArray(a)){const l=a.map(a=>this.translate(a,t,e,o));return await Promise.all(l)}const l=a,[n,s]=await this.translateRaw(a,t,e,o),c=n[0].map(a=>a[0]||"").join(""),h=this.parseExtraData(n);try{e=n[2]}catch(a){}let m=l;try{m=n[0][1][-2]}catch(a){try{m=n[0][1][2]}catch(a){}}return k.includes(t)&&m===l&&(m=c),new u(e,t,l,c,m,h)}async detect(a,t={}){if(Array.isArray(a)){const e=a.map(a=>this.detect(a,t));return await Promise.all(e)}const[e,o]=await this.translateRaw(a,"en","auto",t);let l="",n=0;try{e[8][0].length>1?(l=e[8][0],n=e[8][-2]):(l=e[8][0].join(""),n=e[8][-2][0])}catch(a){}return new p(l,n,o)}}export{n as DEFAULT_CLIENT_SERVICE_URLS,c as DEFAULT_RAISE_EXCEPTION,s as DEFAULT_SERVICE_URLS,l as DEFAULT_USER_AGENT,h as DUMMY_DATA,p as Detected,i as LANGCODES,g as LANGUAGES,r as SPECIAL_CASES,o as TokenAcquirer,u as Translated,d as Translator};